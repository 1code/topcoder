import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class MatchMaker {
	private void d(String msg) {
		System.out.println(msg);
	}
	
	public String[] getBestMatches(String[] param0, String param1, int param2) {
		String[] want = null;
		for (int i = 0; i < param0.length; i++) {
			if (param0[i].startsWith(param1))
				want = param0[i].split(" ");
		}
		//d(want[0] + "," + want[2] + "," + want.length);
		Map<String, Integer> picked = new LinkedHashMap<String, Integer>();
		int sfMax = param2;

		for (int i = 0; i < param0.length; i++) {
			String[] people = param0[i].split(" ");
			//d("" + people.length);
			if (!people[0].equals(want[0])) {
				if (people[1].equals(want[2])) {
					int sf = 0;
					for (int j = 3; j < want.length; j++) {
						if (people[j].equals(want[j])) sf++;
					}
					//d(people[0] + " " + sf);
					if (sf >= param2) {
						picked.put(people[0], sf);
						if (sf > sfMax) sfMax = sf;
					}
				}
			}
		}
		
		//d("max " + sfMax + " min " + param2);
		String[] result = new String[picked.size()];
		int index = 0;
		for (int i = sfMax; i >= param2; i--) {
			for (Map.Entry<String, Integer> entry : picked.entrySet()) {
				if (entry.getValue() == i) {
					result[index++] = entry.getKey();
				}
			}
		}
		return result;	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, String p1, int p2, boolean hasAnswer, String[] p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + "\"" + p1 + "\"" + "," + p2);
		System.out.println("]");
		MatchMaker obj;
		String[] answer;
		obj = new MatchMaker();
		long startTime = System.currentTimeMillis();
		answer = obj.getBestMatches(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p3.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p3[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p3.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p3[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String p1;
		int p2;
		String[] p3;
		
		// ----- test 0 -----
		p0 = new String[]{"BETTY F M A A C C","TOM M F A D C A","SUE F M D D D D","ELLEN F M A A C A","JOE M F A A C A","ED M F A D D A","SALLY F M C D A B","MARGE F M A A C C"};
		p1 = "BETTY";
		p2 = 2;
		p3 = new String[]{"JOE","TOM"};
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"BETTY F M A A C C","TOM M F A D C A","SUE F M D D D D","ELLEN F M A A C A","JOE M F A A C A","ED M F A D D A","SALLY F M C D A B","MARGE F M A A C C"};
		p1 = "JOE";
		p2 = 1;
		p3 = new String[]{"ELLEN","BETTY","MARGE"};
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"BETTY F M A A C C","TOM M F A D C A","SUE F M D D D D","ELLEN F M A A C A","JOE M F A A C A","ED M F A D D A","SALLY F M C D A B","MARGE F M A A C C"};
		p1 = "MARGE";
		p2 = 4;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, false, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
